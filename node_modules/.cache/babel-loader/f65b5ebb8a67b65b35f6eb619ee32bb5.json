{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Hackathons/TecHacks/study-plan-generator-and-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Exams from './components/Exams';\nimport AddExam from './components/AddExam';\nimport AddPlan from './components/AddPlan';\nimport About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddExam, setShowAddExam] = useState(false);\n  const [exams, setExams] = useState([]);\n  useEffect(() => {\n    const getExams = async () => {\n      const examsFromServer = await fetchExams();\n      setExams(examsFromServer);\n    };\n\n    getExams();\n  }, []); // Fetch Exams\n\n  const fetchExams = async () => {\n    const res = await fetch('http://localhost:5000/exams');\n    const data = await res.json();\n    return data;\n  }; // Fetch Exam\n\n\n  const fetchExam = async id => {\n    const res = await fetch(`http://localhost:5000/exams/${id}`);\n    const data = await res.json();\n    return data;\n  }; // Add Exam\n\n\n  const addExam = async exam => {\n    const res = await fetch('http://localhost:5000/exams', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(exam)\n    });\n    const data = await res.json();\n    setExams([...exams, data]);\n  }; // Delete Exam\n\n\n  const deleteExam = async id => {\n    await fetch(`http://localhost:5000/exams/${id}`, {\n      method: 'DELETE'\n    });\n    setExams(exams.filter(exam => exam.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = async id => {\n    const examToToggle = await fetchExam(id);\n    const updExam = { ...examToToggle,\n      reminder: !examToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/exams/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updExam)\n    });\n    const data = await res.json();\n    setExams(exams.map(exam => exam.id === id ? { ...exam,\n      reminder: data.reminder\n    } : exam));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddExam(!showAddExam),\n        showAdd: showAddExam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), showAddExam && /*#__PURE__*/_jsxDEV(AddExam, {\n        onAdd: addExam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this), exams.length > 0 ? /*#__PURE__*/_jsxDEV(Exams, {\n        exams: exams,\n        onDelete: deleteExam,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }, this) : 'No Upcoming Exam', /*#__PURE__*/_jsxDEV(AddPlan, {\n        onAdd: addPlan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jxcKa8jVXvfd+CUNIx/pFnyYNzE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macbook/Desktop/Hackathons/TecHacks/study-plan-generator-and-tracker/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Route","Header","Footer","Exams","AddExam","AddPlan","About","App","showAddExam","setShowAddExam","exams","setExams","getExams","examsFromServer","fetchExams","res","fetch","data","json","fetchExam","id","addExam","exam","method","headers","body","JSON","stringify","deleteExam","filter","toggleReminder","examToToggle","updExam","reminder","map","length","addPlan"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Exams from './components/Exams'\nimport AddExam from './components/AddExam'\nimport AddPlan from './components/AddPlan'\nimport About from './components/About'\n\nconst App = () => {\n  const [showAddExam, setShowAddExam] = useState(false)\n  const [exams, setExams] = useState([])\n\n  useEffect(() => {\n    const getExams = async() => {\n      const examsFromServer = await fetchExams()\n      setExams(examsFromServer)\n    }\n\n    getExams()\n  }, [])\n\n  // Fetch Exams\n  const fetchExams = async() => {\n    const res = await fetch('http://localhost:5000/exams')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Exam\n  const fetchExam = async(id) => {\n    const res = await fetch(`http://localhost:5000/exams/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Exam\n  const addExam = async (exam) => {\n    const res = await fetch('http://localhost:5000/exams', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(exam),\n    })\n\n    const data = await res.json()\n    \n    setExams([...exams, data])\n  }\n\n  // Delete Exam\n  const deleteExam = async (id) => {\n    await fetch(`http://localhost:5000/exams/${id}`, {\n      method: 'DELETE'\n    })\n\n    setExams(exams.filter((exam) => exam.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const examToToggle = await fetchExam(id)\n    const updExam = { ...examToToggle, reminder: !examToToggle.reminder }\n    \n    const res = await fetch(`http://localhost:5000/exams/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updExam),\n    })\n\n    const data = await res.json()\n\n    setExams(exams.map((exam) => \n      exam.id === id ? { ...exam, reminder : \n      data.reminder } : exam\n      )\n    )\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowAddExam(!showAddExam)} \n        showAdd={showAddExam} />\n        {showAddExam && <AddExam onAdd={addExam} />}\n        {exams.length > 0 ? <Exams exams={exams} \n        onDelete={deleteExam} \n        onToggle={toggleReminder} /> : 'No Upcoming Exam'}\n        <AddPlan onAdd={addPlan} />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
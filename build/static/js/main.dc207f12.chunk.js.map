{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Exam.js","components/Exams.js","components/AddExam.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Footer","href","Exam","exam","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Exams","exams","map","index","AddExam","useState","setText","score","setScore","diff","setDiff","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","disabled","selected","checked","currentTarget","About","to","App","showAddExam","setShowAddExam","setExams","useEffect","a","fetchExams","examsFromServer","getExams","fetch","res","json","data","fetchExam","addExam","method","headers","body","JSON","stringify","deleteExam","filter","toggleReminder","examToToggle","updExam","length","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc207f12.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text , onClick}) => {\n    return (\n        <button \n            onClick={onClick} \n            style={{backgroundColor: color}} \n            className='btn'\n        >\n            {text}\n    </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func.isRequired\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: \"Exam Plan Maker\",\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","const Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <a href='/about'>About</a>\n        </footer>\n    )\n}\n\nexport default Footer\n","import {FaTimes} from 'react-icons/fa'\n\nconst Exam = ({ exam, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${exam.reminder ? 'reminder' : ''}`} \n        onDoubleClick={() => \n        onToggle(exam.id)}>\n            <h3>\n                {exam.text} \n                <FaTimes style={{ \n                    color: 'red', \n                    cursor: 'pointer' \n                }} onClick={() => onDelete(exam.id)}/> \n            </h3>\n            <p>{exam.day}</p>\n        </div>\n    )\n}\n\nexport default Exam\n","import Exam from './Exam'\n\nconst Exams = ({ exams, onDelete, onToggle }) => {\n    return (\n        <>\n            {exams.map((exam, index) => (\n                <Exam key={index} exam={exam} \n                onDelete={onDelete} onToggle={onToggle} />\n            ))}    \n        </>\n    )\n}\n\nexport default Exams\n","import { useState } from 'react'\n\nconst AddExam = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [score, setScore] = useState('')\n    const [diff, setDiff] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!text) {\n            alert('Please add an exam')\n            return\n        } else {\n            alert('Successfully submitted')\n        }\n\n        onAdd({ text, score, diff, day, reminder})\n\n        setText('')\n        setScore('')\n        setDiff('')\n        setDay('')\n        setReminder('')\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Exam</label>\n                <input type='text' placeholder='Example: Calculus I Midterm' \n                value={text} onChange={(e) => \n                setText(e.target.value)} />\n            </div>\n            <div className='form-control form-control-select'>\n                <label>Select Score Aim</label>\n                <select className='form-control-option' value={score}\n                onChange={(e) => setScore(e.target.value)}>\n                    <option value=\"\" disabled selected>Select a Grade</option>\n                    <option value=\"90\">A</option>\n                    <option value=\"80\">B</option>\n                    <option value=\"70\">C</option>\n                    <option value=\"60\">D</option>\n                    <option value=\"50\">F</option>\n                </select>\n            </div>\n            <div className='form-control form-control-select'>\n                <label>Select Difficulty</label>\n                <select className='form-control-option' value={diff} \n                onChange={(e) => setDiff(e.target.value)}>\n                    <option value=\"\" disabled selected>Select a Level</option>\n                    <option value=\"50\">Super Hard</option>\n                    <option value=\"40\">Hard</option>\n                    <option value=\"30\">Moderate</option>\n                    <option value=\"20\">Easy</option>\n                    <option value=\"10\">Super Easy</option>\n                </select>\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Example: Mar 19th at 2:30pm'\n                value={day} onChange={(e) => \n                setDay(e.target.value)} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' \n                checked={reminder}\n                value={reminder} onChange={(e) => \n                setReminder(e.currentTarget.checked)} />\n            </div>\n\n            <input type='submit' value='Save Exam' \n            className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddExam","import { Link } from 'react-router-dom'\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Educational Solution for TecHacks 2021</h4>\n      <Link to='/'>Go Back</Link>\n    </div>\n  )\n}\n\nexport default About","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Exams from './components/Exams'\nimport AddExam from './components/AddExam'\nimport About from './components/About'\n\nconst App = () => {\n  const [showAddExam, setShowAddExam] = useState(false)\n  const [exams, setExams] = useState([])\n\n  useEffect(() => {\n    const getExams = async() => {\n      const examsFromServer = await fetchExams()\n      setExams(examsFromServer)\n    }\n\n    getExams()\n  }, [])\n\n  // Fetch Exams\n  const fetchExams = async() => {\n    const res = await fetch('http://localhost:5000/exams')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Exam\n  const fetchExam = async(id) => {\n    const res = await fetch(`http://localhost:5000/exams/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Exam\n  const addExam = async (exam) => {\n    const res = await fetch('http://localhost:5000/exams', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(exam),\n    })\n\n    const data = await res.json()\n    \n    setExams([...exams, data])\n  }\n\n  // Delete Exam\n  const deleteExam = async (id) => {\n    await fetch(`http://localhost:5000/exams/${id}`, {\n      method: 'DELETE'\n    })\n\n    setExams(exams.filter((exam) => exam.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const examToToggle = await fetchExam(id)\n    const updExam = { ...examToToggle, reminder: !examToToggle.reminder }\n    \n    const res = await fetch(`http://localhost:5000/exams/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updExam),\n    })\n\n    const data = await res.json()\n\n    setExams(exams.map((exam) => \n      exam.id === id ? { ...exam, reminder : \n      data.reminder } : exam\n      )\n    )\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowAddExam(!showAddExam)} \n        showAdd={showAddExam} />\n        {showAddExam && <AddExam onAdd={addExam} />}\n        {exams.length > 0 ? <Exams exams={exams} \n        onDelete={deleteExam} \n        onToggle={toggleReminder} /> : 'No Upcoming Exam'}\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}